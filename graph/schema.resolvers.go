package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"
	"graphql_go/graph/model"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}
// type Todo struct {
// 	ID   string `json:"id"`
// 	Text string `json:"text"`
// 	Done bool   `json:"done"`
// 	User *User  `json:"user"`
// }
// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	var items []*model.Todo
	item1 := model.Todo{
		ID: "1",
		Text: "Buy milk",
		Done: true,
	}
	items = append(items, &item1)

	
	// item2 := model.Todo{
	// 	id: 2,
	// 	title: "Do laundry",
	// 	description: "Wash clothes and towels",
	// 	completed: true,
	// }
	// panic(fmt.Errorf("not implemented: Todos - todos"))
	return items, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
